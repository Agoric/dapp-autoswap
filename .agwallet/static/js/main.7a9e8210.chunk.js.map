{"version":3,"sources":["utils/fetch-websocket.js","utils/constants.js","store/types.js","store/actions.js","store/reducer.js","store/operations.js","contexts/Application.jsx","components/Header.jsx","components/Web3Status.jsx","components/Purses.jsx","components/Inbox.jsx","components/Wallet.jsx","pages/App.jsx","index.jsx"],"names":["doFetch","req","a","fetch","method","body","JSON","stringify","headers","then","response","json","ok","res","catch","err","console","log","websocket","createWebSocket","onConnect","onDisconnect","onMessage","WebSocket","url","URL","process","protocol","getWebsocketEndpoint","addEventListener","data","isWebSocketActive","deactivateWebSocket","close","updatePurses","payload","type","updateInbox","reducer","state","active","activateConnection","deactivateConnection","connected","serverConnected","serverDisconnected","purses","inbox","date","declineOffer","acceptOffer","TypeError","ApplicationContext","createContext","useApplicationContext","useContext","useStyles","makeStyles","theme","appBar","position","title","flexGrow","icon","marginRight","spacing","Header","children","classes","AppBar","className","Toolbar","Typography","variant","color","noWrap","divider","Web3Status","dispatch","account","useEffect","Chip","label","avatar","Button","onClick","minWidth","Purses","Array","isArray","length","List","map","purseName","assayId","allegedName","extent","ListItem","key","value","ListItemIcon","ListItemText","primary","secondary","margin","buttons","marginLeft","RedIconButton","withStyles","root","palette","getContrastText","red","backgroundColor","IconButton","GreenIconButton","green","RedChip","width","borderColor","GreenChip","Inbox","instanceId","purseName0","purseName1","assayId0","assayId1","extent0","extent1","status","edge","Grid","container","direction","item","display","Date","toLocaleDateString","year","month","day","hour","minute","second","formatDate","Box","component","fontWeight","ListItemSecondaryAction","size","aria-label","handleDecline","handleAccept","paper","marginTop","marginBottom","padding","breakpoints","up","aside","borderRightColor","borderRightStyle","borderRightWidth","Wallet","Paper","align","xs","layout","createMuiTheme","main","typography","useNextVariants","render","useReducer","messageHandler","message","parse","websocketListeners","activateWebSocket","Provider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.7a9e8210.chunk.js","sourcesContent":["/* globals window, WebSocket, fetch */\n\n// todo: refactor this to a class\n\nimport { API_URL } from './constants';\n\n// === FETCH\n\nexport async function doFetch(req) {\n  return fetch('/vat', {\n    method: 'POST',\n    body: JSON.stringify(req),\n    headers: { 'Content-Type': 'application/json' },\n  })\n    .then(response => response.json())\n    .then(({ ok, res }) => (ok ? res : {}))\n    .catch(err => {\n      console.log('Fetch Error', err);\n    });\n}\n\n// === WEB SOCKET\n\nlet websocket = null;\n\nfunction getWebsocketEndpoint() {\n  // TODO proxy websocket.\n  const url = new URL(API_URL || window.origin);\n  url.protocol = 'ws';\n  return url;\n}\n\nfunction createWebSocket({ onConnect, onDisconnect, onMessage }) {\n  websocket = new WebSocket(getWebsocketEndpoint());\n  if (onConnect) {\n    websocket.addEventListener('open', () => onConnect());\n  }\n  if (onDisconnect) {\n    websocket.addEventListener('close', () => onDisconnect());\n  }\n  if (onMessage) {\n    websocket.addEventListener('message', ({ data }) => onMessage(data));\n  }\n}\n\nfunction closeWebSocket() {\n  websocket.close();\n  websocket = null;\n}\n\nfunction isWebSocketActive() {\n  return !!websocket;\n}\n\nexport function activateWebSocket(websocketListeners = {}) {\n  if (isWebSocketActive()) return;\n  createWebSocket(websocketListeners);\n}\n\nexport function deactivateWebSocket() {\n  if (!isWebSocketActive()) return;\n  closeWebSocket();\n}\n","export const API_URL = process.env.REACT_APP_API_URL;\n","export const ACTIVATE_CONNECTION = 'ACTIVATE_CONNECTION';\nexport const DEACTIVATE_CONNECTION = 'DEACTIVATE_CONNECTION';\n\nexport const SERVER_CONNECTED = 'SERVER_CONNECTED';\nexport const SERVER_DISCONNECTED = 'SERVER_DISCONNECTED';\n\nexport const UPDATE_PURSES = 'UPDATE_PURSES';\nexport const UPDATE_INBOX = 'UPDATE_INBOX';\n\nexport const REJECT_OFFER = 'REJECT_OFFER';\nexport const CONFIRM_OFFER = 'CONFIRM_OFFER';\n","import {\n  ACTIVATE_CONNECTION,\n  DEACTIVATE_CONNECTION,\n  SERVER_CONNECTED,\n  SERVER_DISCONNECTED,\n  UPDATE_PURSES,\n  UPDATE_INBOX,\n  REJECT_OFFER,\n  CONFIRM_OFFER,\n} from './types';\n\nexport const activateConnection = () => ({\n  type: ACTIVATE_CONNECTION,\n});\n\nexport const deactivateConnection = () => ({\n  type: DEACTIVATE_CONNECTION,\n});\n\nexport const serverConnected = () => ({\n  type: SERVER_CONNECTED,\n});\n\nexport const serverDisconnected = () => ({\n  type: SERVER_DISCONNECTED,\n});\n\nexport const updatePurses = payload => ({\n  type: UPDATE_PURSES,\n  payload,\n});\nexport const updateInbox = payload => ({\n  type: UPDATE_INBOX,\n  payload,\n});\n\nexport const declineOffer = payload => ({\n  type: REJECT_OFFER,\n  payload,\n});\nexport const acceptOffer = payload => ({\n  type: CONFIRM_OFFER,\n  payload,\n});\n","import {\n  ACTIVATE_CONNECTION,\n  DEACTIVATE_CONNECTION,\n  SERVER_CONNECTED,\n  SERVER_DISCONNECTED,\n  UPDATE_PURSES,\n  UPDATE_INBOX,\n  REJECT_OFFER,\n  CONFIRM_OFFER,\n} from './types';\nimport {\n  activateConnection,\n  deactivateConnection,\n  serverConnected,\n  serverDisconnected,\n  updatePurses,\n  updateInbox,\n  declineOffer,\n  acceptOffer,\n} from './operations';\n\nexport function createDefaultState() {\n  return {\n    active: false,\n    connected: false,\n    account: null,\n    purses: null,\n    inbox: null,\n  };\n}\n\n/* eslint-disable complexity */\nexport const reducer = (state, { type, payload }) => {\n  switch (type) {\n    case ACTIVATE_CONNECTION:\n      return activateConnection(state);\n    case DEACTIVATE_CONNECTION:\n      return deactivateConnection(state);\n\n    case SERVER_CONNECTED:\n      return serverConnected(state);\n    case SERVER_DISCONNECTED:\n      return serverDisconnected(state);\n\n    case UPDATE_PURSES:\n      return updatePurses(state, payload);\n    case UPDATE_INBOX:\n      return updateInbox(state, payload);\n\n    case REJECT_OFFER:\n      return declineOffer(state, payload);\n    case CONFIRM_OFFER:\n      return acceptOffer(state, payload);\n\n    default:\n      throw new TypeError(`Action not supported ${type}`);\n  }\n};\n/* eslint-enable complexity */\n","import { doFetch } from '../utils/fetch-websocket';\n\nexport function activateConnection(state) {\n  return { ...state, active: true };\n}\nexport function deactivateConnection(state) {\n  return { ...state, active: false };\n}\n\nexport function serverConnected(state) {\n  return { ...state, connected: true };\n}\nexport function serverDisconnected(state) {\n  return { ...state, connected: false };\n}\n\nexport function updatePurses(state, purses) {\n  return { ...state, purses };\n}\nexport function updateInbox(state, inbox) {\n  return { ...state, inbox };\n}\n\nexport function declineOffer(state, date) {\n  doFetch({\n    type: 'walletDeclineOffer',\n    data: date,\n  }); // todo toast\n\n  return state;\n}\nexport function acceptOffer(state, date) {\n  doFetch({\n    type: 'walletAcceptOffer',\n    data: date,\n  }); // todo toast\n\n  return state;\n}\n","import React, { createContext, useContext, useReducer, useEffect } from 'react';\n\nimport {\n  activateWebSocket,\n  deactivateWebSocket,\n  doFetch,\n} from '../utils/fetch-websocket';\nimport {\n  updatePurses,\n  updateInbox,\n  serverConnected,\n  serverDisconnected,\n  deactivateConnection,\n} from '../store/actions';\nimport { reducer, createDefaultState } from '../store/reducer';\n\nexport const ApplicationContext = createContext();\n\nexport function useApplicationContext() {\n  return useContext(ApplicationContext);\n}\n\n// eslint-disable-next-line react/prop-types\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, createDefaultState());\n  const { active } = state;\n\n  useEffect(() => {\n    function messageHandler(message) {\n      if (!message) return;\n      const { type, data } = message;\n      if (type === 'walletUpdatePurses') {\n        dispatch(updatePurses(JSON.parse(data)));\n      }\n      if (type === 'walletUpdateInbox') {\n        dispatch(updateInbox(JSON.parse(data)));\n      }\n    }\n\n    function walletGetPurses() {\n      return doFetch({ type: 'walletGetPurses' }).then(messageHandler);\n    }\n    function walletGetInbox() {\n      return doFetch({ type: 'walletGetInbox' }).then(messageHandler);\n    }\n\n    if (active) {\n      activateWebSocket({\n        onConnect() {\n          dispatch(serverConnected());\n          walletGetPurses();\n          walletGetInbox();\n        },\n        onDisconnect() {\n          dispatch(serverDisconnected());\n          dispatch(deactivateConnection());\n          dispatch(updatePurses(null));\n          dispatch(updateInbox(null));\n        },\n        onMessage(message) {\n          messageHandler(JSON.parse(message));\n        },\n      });\n    } else {\n      deactivateWebSocket();\n    }\n  }, [active]);\n\n  return (\n    <ApplicationContext.Provider value={{ state, dispatch }}>\n      {children}\n    </ApplicationContext.Provider>\n  );\n}\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\nimport WalletIcon from '@material-ui/icons/AccountBalanceWallet';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  icon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\n// eslint-disable-next-line react/prop-types\nexport default function Header({ children }) {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"absolute\" className={classes.appBar}>\n      <Toolbar>\n        <WalletIcon className={classes.icon} />\n        <Typography\n          variant=\"h6\"\n          color=\"inherit\"\n          noWrap\n          className={classes.title}\n        >\n          Simple Wallet\n        </Typography>\n        {children}\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React, { useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Chip } from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\n\nimport { useApplicationContext } from '../contexts/Application';\nimport { activateConnection, deactivateConnection } from '../store/actions';\n\nconst useStyles = makeStyles(theme => ({\n  divider: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function Web3Status() {\n  const classes = useStyles();\n  const { state, dispatch } = useApplicationContext();\n  const { active, connected, account } = state;\n\n  // By default, be connected.\n  useEffect(() => dispatch(activateConnection()), []);\n\n  function handleConnect() {\n    dispatch(activateConnection());\n  }\n\n  function handleDisconnect() {\n    dispatch(deactivateConnection());\n  }\n\n  return (\n    <>\n      {connected && (\n        <Chip\n          className={classes.divider}\n          label={account || 'anonymous'}\n          avatar={<PersonIcon />}\n        />\n      )}\n      {active ? (\n        <Button variant=\"contained\" onClick={handleDisconnect}>\n          Disconnect\n        </Button>\n      ) : (\n        <Button variant=\"contained\" onClick={handleConnect}>\n          Connect\n        </Button>\n      )}\n    </>\n  );\n}\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  List,\n  ListItemIcon,\n  ListItem,\n  ListItemText,\n  Typography,\n} from '@material-ui/core';\nimport PurseIcon from '@material-ui/icons/BusinessCenter';\n\nimport { useApplicationContext } from '../contexts/Application';\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    minWidth: 24,\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function Purses() {\n  const classes = useStyles();\n  const { state } = useApplicationContext();\n  const { purses } = state;\n\n  return (\n    <>\n      <Typography variant=\"h6\">Purses</Typography>\n      {Array.isArray(purses) && purses.length > 0 ? (\n        <List>\n          {purses.map(({ purseName, assayId, allegedName, extent }) => (\n            <ListItem key={purseName} value={purseName} divider>\n              <ListItemIcon className={classes.icon}>\n                <PurseIcon />\n              </ListItemIcon>\n              <ListItemText\n                primary={purseName}\n                secondary={`${extent} ${assayId} (${allegedName})`}\n              />\n            </ListItem>\n          ))}\n        </List>\n      ) : (\n        <Typography color=\"inherit\">No purses.</Typography>\n      )}\n    </>\n  );\n}\n","import React from 'react';\n\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { green, red } from '@material-ui/core/colors';\nimport {\n  Box,\n  Chip,\n  Grid,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  IconButton,\n  Typography,\n} from '@material-ui/core';\nimport AutoswapIcon from '@material-ui/icons/SwapHorizontalCircle';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport CheckIcon from '@material-ui/icons/Check';\n\nimport { useApplicationContext } from '../contexts/Application';\n\nimport { declineOffer, acceptOffer } from '../store/actions';\n\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    margin: theme.spacing(1),\n  },\n  buttons: {\n    '& button ~ button': {\n      marginLeft: theme.spacing(1),\n    },\n  },\n}));\n\nconst RedIconButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(red[500]),\n    backgroundColor: red[500],\n    '&:hover': {\n      backgroundColor: red[700],\n    },\n  },\n}))(IconButton);\n\nconst GreenIconButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },\n}))(IconButton);\n\nconst RedChip = withStyles(theme => ({\n  root: {\n    width: theme.spacing(10),\n    color: red[800],\n    borderColor: red[800],\n  },\n}))(Chip);\n\nconst GreenChip = withStyles(theme => ({\n  root: {\n    width: theme.spacing(10),\n    color: green[800],\n    borderColor: green[800],\n  },\n}))(Chip);\n\nexport default function Inbox() {\n  const classes = useStyles();\n  const { state, dispatch } = useApplicationContext();\n  const { inbox } = state;\n\n  function formatDate(date) {\n    const options = {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n    };\n    return new Date(date).toLocaleDateString('en-US', options);\n  }\n\n  function handleDecline(date) {\n    dispatch(declineOffer(date));\n  }\n\n  function handleAccept(date) {\n    dispatch(acceptOffer(date));\n  }\n\n  return (\n    <>\n      <Typography variant=\"h6\">Transactions</Typography>\n      {Array.isArray(inbox) && inbox.length > 0 ? (\n        <List>\n          {inbox.map(\n            ({\n              instanceId,\n              date,\n              purseName0,\n              purseName1,\n              assayId0,\n              assayId1,\n              extent0,\n              extent1,\n              status,\n            }) => (\n              <ListItem key={date} value={date} divider>\n                <ListItemIcon>\n                  <AutoswapIcon edge=\"start\" className={classes.icon} />\n                </ListItemIcon>\n                <Grid container direction=\"column\">\n                  <Grid item>\n                    <Typography variant=\"body2\" display=\"block\">\n                      {`${instanceId} - ${formatDate(date)}`}\n                    </Typography>\n                  </Grid>\n                  <Grid item>\n                    <Typography variant=\"body1\">\n                      Pay&nbsp;\n                      <Box component=\"span\" fontWeight={800}>\n                        {extent0}\n                        &nbsp;\n                        {assayId0}\n                        &nbsp;\n                      </Box>\n                      from&nbsp;\n                      {purseName0}\n                    </Typography>\n                    <Typography variant=\"body1\">\n                      to receive&nbsp;\n                      <Box component=\"span\" fontWeight={800}>\n                        {extent1}\n                        &nbsp;\n                        {assayId1}\n                        &nbsp;\n                      </Box>\n                      into&nbsp;\n                      {purseName1}\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <ListItemSecondaryAction className={classes.buttons}>\n                  {status === 'decline' && (\n                    <RedChip variant=\"outlined\" label=\"Declined\" />\n                  )}\n                  {status === 'accept' && (\n                    <GreenChip variant=\"outlined\" label=\"Accepted\" />\n                  )}\n                  {!status && (\n                    <>\n                      <RedIconButton\n                        size=\"small\"\n                        aria-label=\"Decline\"\n                        onClick={() => handleDecline(date)}\n                      >\n                        <ClearIcon />\n                      </RedIconButton>\n                      <GreenIconButton\n                        size=\"small\"\n                        aria-label=\"Accept\"\n                        onClick={() => handleAccept(date)}\n                      >\n                        <CheckIcon />\n                      </GreenIconButton>\n                    </>\n                  )}\n                </ListItemSecondaryAction>\n              </ListItem>\n            ),\n          )}\n        </List>\n      ) : (\n        <Typography color=\"inherit\">No transactions.</Typography>\n      )}\n    </>\n  );\n}\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, Typography } from '@material-ui/core';\n\nimport Purses from './Purses';\nimport Inbox from './Inbox';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  title: {\n    padding: theme.spacing(0, 0, 4),\n  },\n  aside: {\n    borderRightColor: theme.palette.divider,\n    borderRightStyle: 'solid',\n    borderRightWidth: 1,\n  },\n}));\n\nexport default function Wallet() {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.paper}>\n      <Typography\n        component=\"h1\"\n        variant=\"h4\"\n        align=\"center\"\n        className={classes.title}\n      >\n        Wallet\n      </Typography>\n\n      <Grid container spacing={2}>\n        <Grid item xs={4} className={classes.aside}>\n          <Purses />\n        </Grid>\n        <Grid item xs={8}>\n          <Inbox />\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n","import React from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\n\nimport Header from '../components/Header';\nimport Web3Status from '../components/Web3Status';\nimport Wallet from '../components/Wallet';\n\nconst useStyles = makeStyles(theme => ({\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(1000 + theme.spacing(2) * 2)]: {\n      width: 1000,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n}));\n\nexport default function App() {\n  const classes = useStyles();\n\n  return (\n    <>\n      <CssBaseline />\n      <Header>\n        <Web3Status />\n      </Header>\n      <main className={classes.layout}>\n        <Wallet />\n      </main>\n    </>\n  );\n}\n","/* globals document */\nimport React from 'react';\nimport { render } from 'react-dom';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport ApplicationContextProvider from './contexts/Application';\nimport App from './pages/App';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#AB2328',\n    },\n    secondary: {\n      main: '#508AA8',\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nrender(\n  <ApplicationContextProvider>\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  </ApplicationContextProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}